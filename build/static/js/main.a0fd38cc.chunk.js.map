{"version":3,"sources":["shared/assets/images/bg.jpg","core/styles/styles.js","features/Dashboard/redux/dashboardConstants.js","features/Dashboard/redux/dashboardActions.js","shared/components/menu/menu.js","core/api/api.js","features/Dashboard/pages/dashboardStyle.js","features/Dashboard/pages/dashboard.js","features/Favorites/pages/favoritesStyle.js","features/Favorites/pages/favorites.js","core/routes/index.js","features/Dashboard/redux/dashboardReducer.js","core/redux/reducers/index.js","App.js","index.js"],"names":["createGlobalStyle","banner","SAVE_FAVORITE_COMICS","SET_VALUE","saveFavoriteComics","data","dispatch","type","useStyles","makeStyles","root","width","Menu","classes","history","useHistory","useDispatch","value","useSelector","state","DashboardReducer","menuValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","label","icon","onClick","push","api","axios","create","baseURL","Containerbody","styled","div","ContainerbodyOpacity","ComicContainer","DialogBody","Dashboard","useState","comicsRecover","setComicsRecover","isOpen","setIsOpen","saveComicInfo","setSaveComicInfo","favorite","setFavorite","myFavorites","setMyFavorites","handleFavorite","a","Dialog","onClose","aria-labelledby","open","name","style","height","marginRight","alt","src","thumbnail","path","extension","flexDirection","marginBottom","description","alignItems","placeholder","e","text","target","get","then","response","results","catch","err","console","error","Grid","container","spacing","direction","justifyContent","map","item","index","xs","md","display","marginTop","handleSelect","background","backgroundSize","Favorites","myFavoritesComics","getMyFavoriteComics","send","setSend","loading","setLoading","email","setEmail","CircularProgress","color","onSubmit","preventDefault","emailjs","sendForm","result","log","Routes","exact","component","React","Component","INITIAL_STATE","combineReducers","action","_getMyFavoriteComics","_menuValue","store","createStore","reducers","applyMiddleware","ReduxThunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0fd38cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.6c27d617.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport banner from '../../shared/assets/images/bg.jpg'\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: white;\n    -webkit-font-smoothing: antialiased;\n    margin:0px;\n    font-family: 'Roboto', sans-serif;\n  }\n\n  body, input, button {\n    font:16px;\n  }\n  \n  #root{\n    padding: 0px;\n    min-height: 100vh;\n    background-image:url(${banner});\n\n  }\n  \n`;","export const SAVE_FAVORITE_COMICS = 'SAVE_FAVORITE_COMICS';\n\nexport const SET_VALUE = 'SET_VALUE';\n","import {\n  SAVE_FAVORITE_COMICS,\n  SET_VALUE\n} from './dashboardConstants';\n\nexport const saveFavoriteComics = (data) => {\n  return dispatch => {\n    dispatch({type: SAVE_FAVORITE_COMICS, data})\n  };\n};\n\nexport const setValue = (data) => {\n  return dispatch => {\n    dispatch({type: SET_VALUE, data})\n  };\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setValue } from '../../../features/Dashboard/redux/dashboardActions'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nexport function Menu() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.DashboardReducer.menuValue);\n\n  return (\n    <BottomNavigation\n      value={value??0}\n      onChange={(event, newValue) => {\n        dispatch(setValue(newValue));\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} onClick={() => history.push('/')}/>\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} onClick={() => history.push('/favorites')} />\n    </BottomNavigation>\n  );\n}\n","import axios from \"axios\";\n\n// Pode ser algum servidor executando localmente: \n// http://localhost:3000\n\nexport const api = axios.create({\n  baseURL: \"http://gateway.marvel.com/v1/public\",\n});\n","import styled from \"styled-components\";\n\nexport const Containerbody = styled.div`\n  display:flex;\n  min-height: inherit;\n`;\n\nexport const ContainerbodyOpacity = styled.div`\n  display:flex;\n  justify-content:center;\n  align-content:center;\n  flex-direction:column;\n  align-items:center;\n  padding:20px;\n  width:100%;\n  background:rgba(0,0,0,0.8);\n  color:white;\n  text-align:center;\n\n  input {\n    width:70%;\n    padding:15px;\n    border-radius:100px;\n    border-width:0px;\n    margin-top:20px;\n  }\n\n  h1 {\n    font-size:2.4rem;\n    color:white;\n  }\n\n  p{\n    font-size:1.2rem;\n  }\n`;\n\nexport const ComicContainer = styled.div`\n  height:180px;\n  width:100%;\n  background-size: cover !important;\n  max-width:145px;\n  cursor: pointer;\n\n  div{\n    height:100%;\n    width:100%;\n    background:rgba(0,0,0,0.5);\n    padding:15px;\n    display:flex;\n    align-items:flex-end;\n  }\n\n  p{\n    font-size:0.9rem\n  }\n`;\n\nexport const DialogBody = styled.div`\n  display:flex;\n  justify-content:flex-start;\n  flex-direction:column;\n  align-items:center;\n  padding:15px 30px;\n\n  div{\n    display:flex;\n    flex-direction:row;\n  }\n\n  h3{\n    margin-bottom:20px;\n  }\n`;","import { Dialog,Grid } from '@material-ui/core';\nimport { useState } from 'react'\n//img\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n//Local Imports\nimport { Menu } from '../../../shared/components/menu/menu'\n\n//Redux\nimport { saveFavoriteComics } from '../redux/dashboardActions'\n\nimport { api } from '../../../core/api/api'\n\nimport {\n  Containerbody,\n  ContainerbodyOpacity,\n  ComicContainer,\n  DialogBody\n} from './dashboardStyle'\nimport { useDispatch } from 'react-redux';\n\nexport function Dashboard() {\n  const dispatch = useDispatch()\n\n  //States\n  const [comicsRecover, setComicsRecover] = useState([])\n  const [isOpen, setIsOpen] = useState(false)\n  const [saveComicInfo, setSaveComicInfo] = useState({})\n  const [favorite, setFavorite] = useState(false)\n  const [myFavorites, setMyFavorites] = useState([])\n\n  const handleChange = (text) => {\n    api.get(`/characters?apikey=90477e77a3b01a078ec22b190e677c21&ts=1629003931&hash=36847f3d516088a7ce0d7e26491c4832&limit=40&offset=0&nameStartsWith=${text}`)\n    .then((response) =>  setComicsRecover(response?.data?.data?.results))\n    .catch((err) => {\n      console.error(\"ops! ocorreu um erro\" + err);\n    });\n  }\n\n  const handleSelect = (item) => {\n    setSaveComicInfo(item)\n    setIsOpen(true)\n  }\n\n  const handleClose = () => {\n    setIsOpen(false)\n    setFavorite(false)\n  }\n\n  const handleFavorite = async() => {\n    setFavorite(true)\n    await setMyFavorites([...myFavorites,saveComicInfo])\n    dispatch(saveFavoriteComics(myFavorites))\n  }\n\n  const handleExcludeFavorite = () => {\n    setFavorite(false)\n  }\n\n  return (\n    <>\n    <Dialog onClose={() => handleClose() } aria-labelledby=\"simple-dialog-title\" open={isOpen}>\n      <DialogBody>\n        <h3>{saveComicInfo.name}</h3>\n        <div>\n          <img \n            style={{height:'120px',width:'100px',marginRight:10}}\n            alt='comic img' \n            src={`${saveComicInfo?.thumbnail?.path}.${saveComicInfo?.thumbnail?.extension}`}/>\n          <div style={{flexDirection:'column',marginBottom:'20px'}}>\n            <p>Description</p><br/>\n            <p>{saveComicInfo?.description? saveComicInfo?.description:'Unfortunately we dont have the description for this comic'}</p>\n          </div>\n        </div>\n        {!favorite ?\n          <div onClick={() => handleFavorite()} style={{alignItems:'center'}}>\n            <FavoriteBorderIcon />\n            <p>Favorite Comic</p>\n          </div>\n          :\n          <div onClick={() => handleExcludeFavorite()} style={{alignItems:'center'}}>\n              <FavoriteIcon />\n              <p>This comic is in favorites</p>\n          </div>\n        }\n      </DialogBody>\n    </Dialog>\n    <Menu />\n    <Containerbody>\n      <ContainerbodyOpacity>\n        <h1>Marvel Comics</h1>\n        <p>Search and find the best comics!</p>\n        <input \n          placeholder='Pesquisar por heroi'\n          onChange={(e) => handleChange(e.target.value)}\n        />\n        <Grid \n          container spacing={3}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {comicsRecover.map((item,index) => {\n            return (\n              <Grid \n                item xs={6} md={2}\n                style={{display:'flex',justifyContent:\"center\",marginTop:'15px'}}\n              > \n                <ComicContainer \n                  onClick={() => handleSelect(item)}\n                  style={\n                    {\n                      background: `url(${item.thumbnail.path}.${item.thumbnail.extension})`,\n                      backgroundSize: 'cover'\n                    }\n                }>\n                  <div>\n                    <p>{item.name}</p>\n                  </div>\n                </ComicContainer>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </ContainerbodyOpacity>\n    </Containerbody>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Containerbody = styled.div`\n  display:flex;\n  min-height: inherit;\n`;\n\nexport const ContainerbodyOpacity = styled.div`\n  display:flex;\n  justify-content:flex-start;\n  align-content:center;\n  flex-direction:column;\n  align-items:center;\n  padding:20px;\n  width:100%;\n  background:rgba(0,0,0,0.8);\n  color:white;\n  text-align:center;\n\n  input {\n    width:70%;\n    padding:15px;\n    border-radius:100px;\n    border-width:0px;\n    margin-top:20px;\n  }\n\n  h1 {\n    font-size:2rem;\n    color:white;\n  }\n\n  p{\n    font-size:1.2rem;\n  }\n`;\n\nexport const ComicContainer = styled.div`\n  height:180px;\n  width:100%;\n  background-size: cover !important;\n  max-width:145px;\n  cursor: pointer;\n\n  div{\n    height:100%;\n    width:100%;\n    background:rgba(0,0,0,0.5);\n    padding:15px;\n    display:flex;\n    align-items:flex-end;\n  }\n\n  p{\n    font-size:0.9rem\n  }\n`;\n\nexport const DialogBody = styled.div`\n  display:flex;\n  justify-content:flex-start;\n  flex-direction:column;\n  align-items:center;\n  padding:15px 30px;\n\n  div{\n    display:flex;\n    flex-direction:row;\n  }\n\n  h3{\n    margin-bottom:20px;\n  }\n\n  input {\n    width:70%;\n    padding:15px;\n    border-radius:100px;\n    border-width:0px;\n    margin-top:20px;\n  }\n`;","import { Dialog,Grid } from '@material-ui/core';\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Local Imports\nimport { Menu } from '../../../shared/components/menu/menu'\n\nimport emailjs from 'emailjs-com';\n\nimport {\n  Containerbody,\n  ContainerbodyOpacity,\n  ComicContainer,\n  DialogBody\n} from './favoritesStyle'\n\nexport function Favorites() {\n  const myFavoritesComics = useSelector(state => state.DashboardReducer.getMyFavoriteComics);\n\n  const [isOpen, setIsOpen] = useState(false)\n  const [saveComicInfo, setSaveComicInfo] = useState([])\n  const [send, setSend] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [email, setEmail] = useState('')\n\n  const handleSelect = (item) => {\n    setSaveComicInfo(item)\n    setIsOpen(true)\n  }\n\n  const handleClose = () => {\n    setIsOpen(false)\n    setSend(false)\n  }\n\n  const handleSend = (e) => {\n    setLoading(true)\n    e.preventDefault();\n    emailjs.sendForm('service_sa58edu', 'marvel', e.target, 'user_SK6nfixtZ37hXE9PLwU3S')\n      .then((result) => {\n          console.log(result.text);\n          setSend(true)\n          setLoading(false)\n          setEmail('')\n      }, (error) => {\n          console.log(error.text);\n      });\n  }\n\n  return (\n    <>\n    <Dialog onClose={(e) => handleClose(e) } aria-labelledby=\"simple-dialog-title\" open={isOpen}>\n      <DialogBody>\n        <h3>{saveComicInfo.name}</h3>\n        <div>\n          <img \n            style={{height:'120px',width:'100px',marginRight:10}}\n            alt='comic img' \n            src={`${saveComicInfo?.thumbnail?.path}.${saveComicInfo?.thumbnail?.extension}`}/>\n          <div style={{flexDirection:'column',marginBottom:'20px'}}>\n            <p>Description</p><br/>\n            <p>{saveComicInfo?.description? saveComicInfo?.description:'Unfortunately we dont have the description for this comic'}</p>\n          </div>\n        </div>\n          <div style={{alignItems:'center'}}>\n            <FavoriteIcon />\n            <p>This comic is in favorites</p>\n          </div>\n          <div style={{marginTop:20}} />\n          {loading ? <CircularProgress/> : ''}\n          \n          {send ? <p style={{color:'green'}}>Email Sended!!!!</p> : \n          <form onSubmit={handleSend}>\n            <input \n              style={{width:'100%'}}\n              name=\"email\" \n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder='Put your email here'\n            />\n            <input style={{width:'100%'}} type=\"submit\" value=\"Send me by email\" />\n            {/* <input \n              name=\"message\" \n              style={{display:'none'}} \n              value={\n                `${saveComicInfo.name} \\n\\n\n                  Description \\n\\n\n                  ${saveComicInfo?.description? saveComicInfo?.description :'Unfortunately we dont have the description for this comic'}\n                  ${saveComicInfo.urls?.map(item => {\n                    return `${item.url}\\n`\n                  })} \n                `\n              }\n            /> */}\n          </form>\n          }\n      </DialogBody>\n    </Dialog>\n    <Menu />\n    <Containerbody>\n      <ContainerbodyOpacity>\n        <h1>Marvel Comics Favorites</h1>\n        <Grid \n          container spacing={3}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {myFavoritesComics.map((item,index) => {\n            return (\n              <Grid \n                item xs={6} md={2}\n                style={{display:'flex',justifyContent:\"center\",marginTop:'15px'}}\n              > \n                <ComicContainer \n                  onClick={() => handleSelect(item)}\n                  style={\n                    {\n                      background: `url(${item.thumbnail.path}.${item.thumbnail.extension})`,\n                      backgroundSize: 'cover'\n                    }\n                }>\n                  <div>\n                    <p>{item.name}</p>\n                  </div>\n                </ComicContainer>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </ContainerbodyOpacity>\n    </Containerbody>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Dashboard } from '../../features/Dashboard/pages/dashboard';\nimport { Favorites } from '../../features/Favorites/pages/favorites';\n\n\nclass Routes extends React.Component {\n\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/favorites\" exact component={Favorites} />\n      </Switch>\n    );\n  }\n  }\n  \n  export default Routes;\n\n","import {\n  SAVE_FAVORITE_COMICS,\n  SET_VALUE\n} from './dashboardConstants';\n\nconst INITIAL_STATE = {\n  getMyFavoriteComics: [],\n  menuValue: 0\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = INITIAL_STATE, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SAVE_FAVORITE_COMICS:\n      var _getMyFavoriteComics\n\n      if(action.data){\n        _getMyFavoriteComics = action.data\n      }\n\n      return {\n        ...state,\n        getMyFavoriteComics: _getMyFavoriteComics\n      };\n\n    case SET_VALUE:\n      var _menuValue\n\n      if(action.data){\n        _menuValue = action.data\n        \n      }\n\n      return {\n        ...state,\n        menuValue: _menuValue\n      };\n  }\n\n  return state;\n};","import { combineReducers } from 'redux';\nimport DashboardReducer from '../../../features/Dashboard/redux/dashboardReducer';\n\n\nexport default combineReducers({ \n  DashboardReducer:DashboardReducer\n});","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './core/routes';\n\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './core/redux/reducers/';\n\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={ store }>\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Styles from './core/styles/styles';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Styles />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}